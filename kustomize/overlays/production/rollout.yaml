# This example demonstrates a Rollout using the blue-green update strategy, which contains a manual
# gate before promoting the new stack.
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: pnb-pl
spec:
  replicas: 2
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: pnb-pl
  template:
    metadata:
      labels:
        app: pnb-pl
    spec:
      containers:
      - name: wostal-eu
        image: slavicviking/www-pnb:latest
        ports:
        - containerPort: 80
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /
            port: 80
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 80m
            memory: 128Mi
  strategy:
    blueGreen: 
      # activeService specifies the service to update with the new template hash at time of promotion.
      # This field is mandatory for the blueGreen update strategy.
      activeService: pnb-pl-active
      # previewService specifies the service to update with the new template hash before promotion.
      # This allows the preview stack to be reachable without serving production traffic.
      # This field is optional.
      previewService: pnb-pl-preview
      # autoPromotionEnabled disables automated promotion of the new stack by pausing the rollout
      # immediately before the promotion. If omitted, the default behavior is to promote the new
      # stack as soon as the ReplicaSet are completely ready/available.
      # Rollouts can be resumed using: `kubectl argo rollouts promote ROLLOUT`
      autoPromotionEnabled: false

---
kind: Service
apiVersion: v1
metadata:
  name: pnb-pl-active
spec:
  selector:
    app: pnb-pl
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80

---
kind: Service
apiVersion: v1
metadata:
  name: pnb-pl-preview
spec:
  selector:
    app: pnb-pl
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80